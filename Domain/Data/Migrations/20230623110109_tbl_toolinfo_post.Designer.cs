// <auto-generated />
using System;
using DBContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBContext.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230623110109_tbl_toolinfo_post")]
    partial class tbl_toolinfo_post
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsernameChangeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DAL.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AffectedColumns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFDepartment", b =>
                {
                    b.Property<int>("BSFDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BSFDepartmentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BSFDepartmentId");

                    b.ToTable("BSFDepartment", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFGov", b =>
                {
                    b.Property<int>("BSFGovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BSFGovId"), 1L, 1);

                    b.Property<string>("BSFGovtPackage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BSFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedComponent")
                        .HasColumnType("int");

                    b.Property<string>("ConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentFaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinancialProgress")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FocalPersonCellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FocalPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrantAlocated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsNew")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("OnSitePersonCellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnSitePersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PhysicalProgress")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TehsilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalComponent")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalGrant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkScopeAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BSFGovId");

                    b.ToTable("BSFGov", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFGovStage", b =>
                {
                    b.Property<int>("BSFGovStageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BSFGovStageId"), 1L, 1);

                    b.Property<string>("AfterAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AmountRelease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BSFGovId")
                        .HasColumnType("int");

                    b.Property<string>("BeforeAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StageAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BSFGovStageId");

                    b.HasIndex("BSFGovId");

                    b.ToTable("BSFGovStage", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFPrivate", b =>
                {
                    b.Property<int>("BSFPrivateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BSFPrivateId"), 1L, 1);

                    b.Property<string>("AccountTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPlanAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessSMEName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessSector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractAwardAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FisibilityReportAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeneralBusinessIdeaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("NTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NTNAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationNTN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SitesupervisorContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SitesupervisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalGrant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BSFPrivateId");

                    b.HasIndex("GeneralBusinessIdeaId");

                    b.ToTable("BSFPrivate", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFPrivateStage", b =>
                {
                    b.Property<int>("BSFPrivateStageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BSFPrivateStageId"), 1L, 1);

                    b.Property<string>("AfterAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AmountRelease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BSFPrivateId")
                        .HasColumnType("int");

                    b.Property<string>("BeforeAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StageAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BSFPrivateStageId");

                    b.HasIndex("BSFPrivateId");

                    b.ToTable("BSFPrivateStage", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.Stage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StageId");

                    b.ToTable("Stage", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.GRM.GrievanceRedressal", b =>
                {
                    b.Property<int>("GRMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRMId"), 1L, 1);

                    b.Property<string>("AlternateContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanUserMyName")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUserPersonalDetail")
                        .HasColumnType("bit");

                    b.Property<string>("ComplaintChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoDisclose")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRMDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRMNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAlternateContact")
                        .HasColumnType("bit");

                    b.Property<bool>("IsByEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsByMail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsByMobile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsByPhone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPickUpResponses")
                        .HasColumnType("bit");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodtoContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickUpResponses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TehsilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GRMId");

                    b.ToTable("GrievanceRedressal", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.HTSModule.HTS", b =>
                {
                    b.Property<int>("HTSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HTSId"), 1L, 1);

                    b.Property<string>("AgricultureLandProofAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationFormAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitDeposit")
                        .HasColumnType("bit");

                    b.Property<string>("Khasra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalGrant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TunnelSiteSuitabilityFormAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TunnelSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("HTSId");

                    b.HasIndex("MemberId");

                    b.HasIndex("VillageId");

                    b.ToTable("HTS", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.HTSModule.HTSStage", b =>
                {
                    b.Property<int>("HTSStageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HTSStageId"), 1L, 1);

                    b.Property<int>("AmountPaid")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateofPayment")
                        .HasColumnType("datetime2");

                    b.Property<int>("HTSId")
                        .HasColumnType("int");

                    b.Property<int>("InstallmentNo")
                        .HasColumnType("int");

                    b.Property<string>("Picture1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HTSStageId");

                    b.HasIndex("HTSId");

                    b.ToTable("HTSStage", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiarySummary", b =>
                {
                    b.Property<int>("BeneficiarySummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiarySummaryId"), 1L, 1);

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FemaleBeneficiary")
                        .HasColumnType("int");

                    b.Property<int>("FemaleRefugeeBeneficiary")
                        .HasColumnType("int");

                    b.Property<int>("MaleBeneficiary")
                        .HasColumnType("int");

                    b.Property<int>("MaleRefugeeBeneficiary")
                        .HasColumnType("int");

                    b.HasKey("BeneficiarySummaryId");

                    b.ToTable("BeneficiarySummary");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryType", b =>
                {
                    b.Property<int>("BeneficiaryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiaryTypeId"), 1L, 1);

                    b.Property<string>("BeneficiaryTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeneficiaryTypeId");

                    b.ToTable("BeneficiaryType", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BLEPUserRole", b =>
                {
                    b.Property<int>("BLEPUserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BLEPUserRoleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BLEPUserRoleId");

                    b.ToTable("BLEPUserRole", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BSFGovtPackage", b =>
                {
                    b.Property<int>("BSFGovtPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BSFGovtPackageId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BSFGovtPackageId");

                    b.ToTable("BSFGovtPackage", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CommunityInstituteMember", b =>
                {
                    b.Property<int>("CommunityInstituteMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommunityInstituteMemberId"), 1L, 1);

                    b.Property<int>("CommunityInstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("MISCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalTrainingAttempt")
                        .HasColumnType("int");

                    b.HasKey("CommunityInstituteMemberId");

                    b.HasIndex("CommunityInstitutionId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("MemberId");

                    b.ToTable("CommunityInstituteMember", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CommunityInstitution", b =>
                {
                    b.Property<int>("CommunityInstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommunityInstitutionId"), 1L, 1);

                    b.Property<string>("CIAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CICode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommunityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HHParticipated")
                        .HasColumnType("int");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmittedForReview")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectedComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeletionFormAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedForReviewBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedForReviewOnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TOPAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalHousehold")
                        .HasColumnType("int");

                    b.Property<int>("UnionCouncilId")
                        .HasColumnType("int");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.Property<string>("VillageProfileAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommunityInstitutionId");

                    b.HasIndex("CommunityTypeId");

                    b.HasIndex("UnionCouncilId");

                    b.HasIndex("VillageId");

                    b.ToTable("CommunityInstitution", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CommunityType", b =>
                {
                    b.Property<int>("CommunityTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommunityTypeId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommunityTypeId");

                    b.ToTable("CommunityType", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.ConstructionType", b =>
                {
                    b.Property<int>("ConstructionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConstructionTypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConstructionTypeId");

                    b.ToTable("ConstructionType", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationId"), 1L, 1);

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesignationId");

                    b.ToTable("Designation", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.HasIndex("DivisionId");

                    b.ToTable("District", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivisionId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvienceId")
                        .HasColumnType("int");

                    b.HasKey("DivisionId");

                    b.HasIndex("ProvienceId");

                    b.ToTable("Division", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("SectionId");

                    b.ToTable("Employee", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.EmployeeContract", b =>
                {
                    b.Property<int>("EmployeeContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeContractId"), 1L, 1);

                    b.Property<string>("EmployeeContractPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HREmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeContractId");

                    b.HasIndex("HREmployeeId");

                    b.ToTable("EmployeeContract", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.GeneralBusinessIdea", b =>
                {
                    b.Property<int>("GeneralBusinessIdeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneralBusinessIdeaId"), 1L, 1);

                    b.Property<string>("GeneralBusinessIdeaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneralBusinessIdeaId");

                    b.ToTable("GeneralBusinessIdea", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.HRDesignation", b =>
                {
                    b.Property<int>("HRDesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRDesignationId"), 1L, 1);

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HRDesignationId");

                    b.ToTable("HRDesignation", "HR");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.HREmployee", b =>
                {
                    b.Property<int>("HREmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HREmployeeId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomicileLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JoiningLetterAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastEducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PTCLNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HREmployeeId");

                    b.ToTable("HREmployee", "HR");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.HRQualificationLevel", b =>
                {
                    b.Property<int>("HRQualificationLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRQualificationLevelId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HRQualificationLevelId");

                    b.ToTable("HRQualificationLevel", "HR");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.HRSection", b =>
                {
                    b.Property<int>("HRSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRSectionId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HRSectionId");

                    b.ToTable("HRSection", "HR");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.IdentifiedBy", b =>
                {
                    b.Property<int>("IdentifiedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdentifiedById"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentifiedById");

                    b.ToTable("IdentifiedBy", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.LIPPackage", b =>
                {
                    b.Property<int>("LIPPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LIPPackageId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackagePrice")
                        .HasColumnType("int");

                    b.HasKey("LIPPackageId");

                    b.ToTable("LIPPackage", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BeneficiaryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseHoldNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRefugee")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.HasIndex("BeneficiaryTypeId");

                    b.HasIndex("VillageId");

                    b.ToTable("Member", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.MemberAfghanDetail", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("AfghanMuhalla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<string>("AssistanceOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssistanceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyPersonAgri")
                        .HasColumnType("bit");

                    b.Property<bool>("FamilyPersonBusiness")
                        .HasColumnType("bit");

                    b.Property<short>("FamilyPersonF04")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonF1217")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonF1859")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonF511")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonF60")
                        .HasColumnType("smallint");

                    b.Property<bool>("FamilyPersonJob")
                        .HasColumnType("bit");

                    b.Property<bool>("FamilyPersonLiveStock")
                        .HasColumnType("bit");

                    b.Property<short>("FamilyPersonM04")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonM1217")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonM1859")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonM511")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonM60")
                        .HasColumnType("smallint");

                    b.Property<bool>("FamilyPersonSkilled")
                        .HasColumnType("bit");

                    b.Property<short>("FamilyPersonSpecialPersonF")
                        .HasColumnType("smallint");

                    b.Property<short>("FamilyPersonSpecialPersonM")
                        .HasColumnType("smallint");

                    b.Property<bool>("FamilyPersonUnskilled")
                        .HasColumnType("bit");

                    b.Property<short>("HHAge")
                        .HasColumnType("smallint");

                    b.Property<string>("HHGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HHName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHHFemale")
                        .HasColumnType("bit");

                    b.Property<string>("LivelihoodSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeanIncomeExpenditure")
                        .HasColumnType("int");

                    b.Property<short>("MeanIncomeMembersInvolve")
                        .HasColumnType("smallint");

                    b.Property<int>("MeanIncomeMonthly")
                        .HasColumnType("int");

                    b.Property<string>("MeanIncomeSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeanIncomeSourceOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthlyIncome")
                        .HasColumnType("int");

                    b.Property<string>("Muhalla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreviousExperience")
                        .HasColumnType("bit");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonNotGoingback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidingSince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocioEconomicStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingInsterest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Village")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("MemberAfghanDetail", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Provience", b =>
                {
                    b.Property<int>("ProvienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvienceId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvienceId");

                    b.ToTable("Provience", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.ToTable("Section", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.Property<int>("TehsilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TehsilId"), 1L, 1);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("TehsilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TehsilId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Tehsil", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingBy", b =>
                {
                    b.Property<int>("TrainingById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingById"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingById");

                    b.ToTable("TrainingBy", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingHead", b =>
                {
                    b.Property<int>("TrainingHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingHeadId"), 1L, 1);

                    b.Property<string>("TrainingHeadName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingHeadId");

                    b.ToTable("TrainingHead", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingType", b =>
                {
                    b.Property<int>("TrainingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingTypeId"), 1L, 1);

                    b.Property<int>("TrainingHeadId")
                        .HasColumnType("int");

                    b.Property<string>("TrainingTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingTypeId");

                    b.HasIndex("TrainingHeadId");

                    b.ToTable("TrainingType", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.Property<int>("UnionCouncilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnionCouncilId"), 1L, 1);

                    b.Property<int>("TehsilId")
                        .HasColumnType("int");

                    b.Property<string>("UnionCouncilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnionCouncilId");

                    b.HasIndex("TehsilId");

                    b.ToTable("UnionCouncil", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Village", b =>
                {
                    b.Property<int>("VillageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VillageId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnionCouncilId")
                        .HasColumnType("int");

                    b.HasKey("VillageId");

                    b.HasIndex("UnionCouncilId");

                    b.ToTable("Village", "master");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.Control", b =>
                {
                    b.Property<int>("ControlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ControlId");

                    b.ToTable("Control", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.DropdownenuAccess", b =>
                {
                    b.Property<int>("DropdownenuAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DropdownenuAccessId"), 1L, 1);

                    b.Property<string>("DropdownMenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<string>("ToolModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DropdownenuAccessId");

                    b.ToTable("DropdownenuAccess", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.DropdownMenu", b =>
                {
                    b.Property<string>("DropdownMenuName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ToolModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DropdownMenuName");

                    b.ToTable("DropdownMenu", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.Tool", b =>
                {
                    b.Property<int>("ToolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolId"), 1L, 1);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ToolId");

                    b.HasIndex("ToolModuleName");

                    b.ToTable("Tool", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolAppPost.ToolControlInfoPost", b =>
                {
                    b.Property<int>("ToolControlInfoPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolControlInfoPostId"), 1L, 1);

                    b.Property<string>("ControlLebel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ToolControlId")
                        .HasColumnType("int");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.HasKey("ToolControlInfoPostId");

                    b.ToTable("ToolControlInfoPost", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolAppPost.ToolInfoDetailPost", b =>
                {
                    b.Property<int>("ToolControlDetailPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolControlDetailPostId"), 1L, 1);

                    b.Property<bool>("ControlDetailValue")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToolControlId")
                        .HasColumnType("int");

                    b.HasKey("ToolControlDetailPostId");

                    b.ToTable("ToolInfoDetailPost", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolControl", b =>
                {
                    b.Property<int>("ToolControlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolControlId"), 1L, 1);

                    b.Property<int>("ControlId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToolControlId");

                    b.HasIndex("ControlId");

                    b.HasIndex("ToolId");

                    b.ToTable("ToolControl", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolControlDetail", b =>
                {
                    b.Property<int>("ToolControlDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolControlDetailId"), 1L, 1);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToolControlId")
                        .HasColumnType("int");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("ToolControlDetailId");

                    b.HasIndex("ToolControlId");

                    b.ToTable("ToolControlDetail", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolDetail", b =>
                {
                    b.Property<int>("ToolFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolFieldId"), 1L, 1);

                    b.Property<bool>("CB1IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB1Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB1OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB2IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB2Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB2OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB3IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB3Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB3OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB4IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB4Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB4OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB5IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB5Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB5OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB6IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB6Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB6OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB7IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB7Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB7OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB8IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB8Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB8OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("CB9IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB9Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CB9OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("DT1Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DT1OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT1Value")
                        .HasColumnType("datetime2");

                    b.Property<string>("DT2Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DT2OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT2Value")
                        .HasColumnType("datetime2");

                    b.Property<string>("DT3Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DT3OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT3Value")
                        .HasColumnType("datetime2");

                    b.Property<string>("DT4Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DT4OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT4Value")
                        .HasColumnType("datetime2");

                    b.Property<string>("DT5Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DT5OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DT5Value")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Dt1IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Dt2IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Dt3IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Dt4IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Dt5IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Pic1IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic1Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic1OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic1Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic2IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic2Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic2OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic2Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic3IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic3Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic3OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic3Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic4IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic4Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic4OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic4Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic5IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic5Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic5OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic5Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic6IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic6Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic6OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic6Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic7IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic7Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic7OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic7Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic8IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic8Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic8OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic8Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pic9IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pic9Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pic9OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic9Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB1IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB1Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB1OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB2IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB2Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB2OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB3IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB3Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB3OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB4IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB4Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB4OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB5IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB5Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB5OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB6IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB6Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB6OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB7IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB7Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB7OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB8IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB8Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB8OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("RB9IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB9Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RB9OrderNo")
                        .HasColumnType("int");

                    b.Property<bool>("TB1IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB1IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB1Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB1OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB1Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB2IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB2IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB2Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB2OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB2Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB3IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB3IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB3Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB3OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB3Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB4IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB4IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB4Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB4OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB4Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB5IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB5IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB5Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB5OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB5Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB6IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB6IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB6Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB6OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB6Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB7IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB7IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB7Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB7OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB7Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB8IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB8IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB8Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB8OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB8Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TB9IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("TB9IsRick")
                        .HasColumnType("bit");

                    b.Property<string>("TB9Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TB9OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TB9Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.HasKey("ToolFieldId");

                    b.ToTable("ToolField", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolFieldOption", b =>
                {
                    b.Property<int>("ToolFieldOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolFieldOptionId"), 1L, 1);

                    b.Property<bool>("CB11IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB11Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB11Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB12IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB12Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB12Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB13IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB13Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB13Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB14IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB14Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB14Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB15IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB15Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB15Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB21IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB21Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB21Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB22IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB22Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB22Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB23IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB23Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB23Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB24IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB24Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB24Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB25IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB25Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB25Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB31IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB31Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB31Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB32IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB32Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB32Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB33IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB33Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB33Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB34IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB34Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB34Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB35IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB35Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB35Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB41IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB41Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB41Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB42IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB42Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB42Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB43IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB43Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB43Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB44IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB44Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB44Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB45IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB45Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB45Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB51IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB51Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB51Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB52IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB52Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB52Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB53IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB53Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB53Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB54IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB54Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB54Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB55IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB55Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB55Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB61IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB61Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB61Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB62IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB62Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB62Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB63IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB63Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB63Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB64IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB64Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB64Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB65IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB65Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB65Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB71IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB71Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB71Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB72IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB72Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB72Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB73IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB73Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB73Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB74IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB74Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB74Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB75IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB75Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB75Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB81IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB81Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB81Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB82IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB82Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB82Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB83IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB83Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB83Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB84IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB84Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB84Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB85IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB85Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB85Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB91IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB91Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB91Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB92IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB92Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB92Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB93IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB93Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB93Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB94IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB94Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB94Value")
                        .HasColumnType("bit");

                    b.Property<bool>("CB95IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CB95Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CB95Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB11IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB11Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB11Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB12IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB12Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB12Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB13IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB13Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB13Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB14IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB14Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB14Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB15IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB15Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB15Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB21IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB21Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB21Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB22IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB22Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB22Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB23IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB23Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB23Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB24IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB24Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB24Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB25IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB25Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB25Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB31IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB31Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB31Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB32IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB32Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB32Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB33IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB33Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB33Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB34IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB34Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB34Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB35IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB35Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB35Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB41IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB41Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB41Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB42IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB42Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB42Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB43IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB43Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB43Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB44IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB44Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB44Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB45IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB45Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB45Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB51IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB51Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB51Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB52IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB52Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB52Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB53IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB53Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB53Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB54IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB54Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB54Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB55IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB55Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB55Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB61IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB61Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB61Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB62IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB62Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB62Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB63IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB63Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB63Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB64IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB64Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB64Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB65IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB65Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB65Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB71IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB71Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB71Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB72IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB72Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB72Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB73IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB73Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB73Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB74IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB74Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB74Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB75IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB75Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB75Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB81IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB81Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB81Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB82IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB82Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB82Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB83IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB83Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB83Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB84IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB84Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB84Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB85IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB85Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB85Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB91IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB91Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB91Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB92IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB92Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB92Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB93IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB93Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB93Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB94IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB94Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB94Value")
                        .HasColumnType("bit");

                    b.Property<bool>("RB95IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RB95Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RB95Value")
                        .HasColumnType("bit");

                    b.Property<int>("ToolFieldId")
                        .HasColumnType("int");

                    b.HasKey("ToolFieldOptionId");

                    b.ToTable("ToolFieldOption", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolModule", b =>
                {
                    b.Property<string>("ToolModuleName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ToolModuleName");

                    b.ToTable("ToolModule", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolUserAccess", b =>
                {
                    b.Property<int>("ToolUserAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolUserAccessId"), 1L, 1);

                    b.Property<int>("ToolId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToolUserAccessId");

                    b.ToTable("ToolUserAccess", "mobile");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.LIPAssetTransfer", b =>
                {
                    b.Property<int>("LIPAssetTransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LIPAssetTransferId"), 1L, 1);

                    b.Property<string>("AssetTransferBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AssetTransferOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataCollectedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataCollectorDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("GRNAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdentifiedById")
                        .HasColumnType("int");

                    b.Property<string>("InternalRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAssetTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternalReviewed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<string>("LIPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LIPFormAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LIPPackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("Latitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Longitute")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("PSC")
                        .HasColumnType("int");

                    b.Property<string>("PictureAttachment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectedComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedOnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("LIPAssetTransferId");

                    b.HasIndex("IdentifiedById");

                    b.HasIndex("LIPPackageId");

                    b.HasIndex("MemberId");

                    b.HasIndex("VillageId");

                    b.ToTable("LIPAssetTransfer", "training");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.LIPTraining", b =>
                {
                    b.Property<int>("LIPTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LIPTrainingId"), 1L, 1);

                    b.Property<string>("AttendanceAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PictureAttachment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionPlanAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalFemale")
                        .HasColumnType("int");

                    b.Property<int>("TotalMale")
                        .HasColumnType("int");

                    b.Property<int>("TotalMember")
                        .HasColumnType("int");

                    b.Property<string>("TrainingFormNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrainingOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("LIPTrainingId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TrainingTypeId");

                    b.HasIndex("VillageId");

                    b.ToTable("LIPTraining", "training");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.LIPTrainingDetail", b =>
                {
                    b.Property<int>("LIPTrainingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LIPTrainingDetailId"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LIPNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LIPTrainingId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("PSCRanking")
                        .HasColumnType("int");

                    b.HasKey("LIPTrainingDetailId");

                    b.HasIndex("LIPTrainingId");

                    b.HasIndex("MemberId");

                    b.ToTable("LIPTrainingDetail", "training");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.MemberTraining", b =>
                {
                    b.Property<int>("MemberTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberTrainingId"), 1L, 1);

                    b.Property<string>("AttendanceAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmittedForReview")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PictureAttachment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAttachment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectedComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionPlanAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedForReviewBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedForReviewOnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalClasses")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalMember")
                        .HasColumnType("int");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrainingOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("MemberTrainingId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TrainingTypeId");

                    b.HasIndex("VillageId");

                    b.ToTable("MemberTraining", "training");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.MemberTrainingDetail", b =>
                {
                    b.Property<int>("MemberTrainingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberTrainingDetailId"), 1L, 1);

                    b.Property<int>("CommunityInstituteMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberTrainingId")
                        .HasColumnType("int");

                    b.HasKey("MemberTrainingDetailId");

                    b.HasIndex("CommunityInstituteMemberId");

                    b.HasIndex("MemberTrainingId");

                    b.ToTable("MemberTrainingDetail", "training");
                });

            modelBuilder.Entity("DAL.Models.ViewModels.CDSummary", b =>
                {
                    b.Property<int>("CommunityInstitutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommunityInstitutionId"), 1L, 1);

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<int>("CDForm")
                        .HasColumnType("int");

                    b.Property<int>("CommunityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmittedForApproval")
                        .HasColumnType("int");

                    b.Property<int>("SubmittedForReview")
                        .HasColumnType("int");

                    b.Property<string>("TehsilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnionCouncilId")
                        .HasColumnType("int");

                    b.Property<string>("UnionCouncilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommunityInstitutionId");

                    b.HasIndex("CommunityTypeId");

                    b.HasIndex("UnionCouncilId");

                    b.ToTable("CDSummary");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ApplicationUser", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFGovStage", b =>
                {
                    b.HasOne("DAL.Models.Domain.BSF.BSFGov", "BSFGov")
                        .WithMany()
                        .HasForeignKey("BSFGovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BSFGov");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFPrivate", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.GeneralBusinessIdea", "GeneralBusinessIdea")
                        .WithMany()
                        .HasForeignKey("GeneralBusinessIdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralBusinessIdea");
                });

            modelBuilder.Entity("DAL.Models.Domain.BSF.BSFPrivateStage", b =>
                {
                    b.HasOne("DAL.Models.Domain.BSF.BSFPrivate", "BSFPrivate")
                        .WithMany()
                        .HasForeignKey("BSFPrivateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BSFPrivate");
                });

            modelBuilder.Entity("DAL.Models.Domain.HTSModule.HTS", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.HTSModule.HTSStage", b =>
                {
                    b.HasOne("DAL.Models.Domain.HTSModule.HTS", "HTS")
                        .WithMany()
                        .HasForeignKey("HTSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HTS");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CommunityInstituteMember", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CommunityInstitution", "CommunityInstitution")
                        .WithMany()
                        .HasForeignKey("CommunityInstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityInstitution");

                    b.Navigation("Designation");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CommunityInstitution", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CommunityType", "CommunityType")
                        .WithMany()
                        .HasForeignKey("CommunityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.UnionCouncil", "UnionCouncil")
                        .WithMany()
                        .HasForeignKey("UnionCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityType");

                    b.Navigation("UnionCouncil");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.District", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Division", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Provience", "Provience")
                        .WithMany()
                        .HasForeignKey("ProvienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provience");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Employee", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.EmployeeContract", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.HREmployee", "HREmployee")
                        .WithMany("Contracts")
                        .HasForeignKey("HREmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HREmployee");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Member", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.BeneficiaryType", "BeneficiaryType")
                        .WithMany()
                        .HasForeignKey("BeneficiaryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeneficiaryType");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.MemberAfghanDetail", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingType", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.TrainingHead", "TrainingHead")
                        .WithMany()
                        .HasForeignKey("TrainingHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingHead");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Tehsil", "Tehsil")
                        .WithMany()
                        .HasForeignKey("TehsilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tehsil");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Village", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.UnionCouncil", "UnionCouncil")
                        .WithMany()
                        .HasForeignKey("UnionCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnionCouncil");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.Tool", b =>
                {
                    b.HasOne("DAL.Models.Domain.ToolApp.ToolModule", "ToolModule")
                        .WithMany()
                        .HasForeignKey("ToolModuleName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToolModule");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolControl", b =>
                {
                    b.HasOne("DAL.Models.Domain.ToolApp.Control", "Control")
                        .WithMany()
                        .HasForeignKey("ControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.ToolApp.Tool", "Tool")
                        .WithMany("ToolControl")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Control");

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolControlDetail", b =>
                {
                    b.HasOne("DAL.Models.Domain.ToolApp.ToolControl", "ToolControl")
                        .WithMany("ToolControlDetail")
                        .HasForeignKey("ToolControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToolControl");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.LIPAssetTransfer", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.IdentifiedBy", "IdentifiedBy")
                        .WithMany()
                        .HasForeignKey("IdentifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.LIPPackage", "LIPPackage")
                        .WithMany()
                        .HasForeignKey("LIPPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentifiedBy");

                    b.Navigation("LIPPackage");

                    b.Navigation("Member");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.LIPTraining", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.TrainingType", "TrainingType")
                        .WithMany()
                        .HasForeignKey("TrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("TrainingType");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.LIPTrainingDetail", b =>
                {
                    b.HasOne("DAL.Models.Domain.Training.LIPTraining", "LIPTraining")
                        .WithMany()
                        .HasForeignKey("LIPTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LIPTraining");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.MemberTraining", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.TrainingType", "TrainingType")
                        .WithMany()
                        .HasForeignKey("TrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("TrainingType");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.Training.MemberTrainingDetail", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CommunityInstituteMember", "CommunityInstituteMember")
                        .WithMany()
                        .HasForeignKey("CommunityInstituteMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.Training.MemberTraining", "MemberTraining")
                        .WithMany()
                        .HasForeignKey("MemberTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityInstituteMember");

                    b.Navigation("MemberTraining");
                });

            modelBuilder.Entity("DAL.Models.ViewModels.CDSummary", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CommunityType", "CommunityType")
                        .WithMany()
                        .HasForeignKey("CommunityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.UnionCouncil", "UnionCouncil")
                        .WithMany()
                        .HasForeignKey("UnionCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityType");

                    b.Navigation("UnionCouncil");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.HREmployee", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.Tool", b =>
                {
                    b.Navigation("ToolControl");
                });

            modelBuilder.Entity("DAL.Models.Domain.ToolApp.ToolControl", b =>
                {
                    b.Navigation("ToolControlDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
